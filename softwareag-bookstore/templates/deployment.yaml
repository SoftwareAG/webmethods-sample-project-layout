apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "softwareag-bookstore.fullname" . }}
  labels:
    app: {{ template "softwareag-bookstore.name" . }}
    chart: {{ template "softwareag-bookstore.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    engine: "msr"
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "softwareag-bookstore.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "5555"
      labels:
        app: {{ template "softwareag-bookstore.name" . }}
        release: {{ .Release.Name }}
    spec:
      securityContext:
        runAsUser: {{ default 0 .Values.RunAsUser }}
{{- if and (.Values.RunAsUser) (.Values.FsGroup) }}
{{- if not (eq .Values.RunAsUser 0.0) }}
        fsGroup: {{ .Values.FsGroup }}
{{- end }}
{{- end }}
      imagePullSecrets: 
      - name: regcred
      containers:
      - name: {{ .Chart.Name }}
        image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
        env:
        - name: SAG_IS_CONFIG_PROPERTIES 
          value: /opt/softwareag/IntegrationServer/properties/application.properties
        volumeMounts:
        - name: {{ .Values.name }}-properties
          mountPath: /opt/softwareag/IntegrationServer/properties
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        ports:
        - name: is
          containerPort: 5555
          protocol: TCP
        livenessProbe:
          initialDelaySeconds: 80
          periodSeconds: 5
          failureThreshold: 20
          httpGet:
            path: /health
            port: is
            httpHeaders:
              - name: Authorization
                value: "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U="
        readinessProbe:
          initialDelaySeconds: 80
          periodSeconds: 5
          failureThreshold: 20
          httpGet:
            path: /health
            port: is
            httpHeaders:
              - name: Authorization
                value: "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U="
        resources:
{{ toYaml .Values.resources | indent 10 }}
    {{- with .Values.nodeSelector }}
    nodeSelector:
{{ toYaml . | indent 6 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
      volumes:
        - name: {{ .Values.name }}-properties
          configMap:
            name: {{ .Values.name }}-properties
{{- if .Values.Persistence.volumes }}
{{ toYaml .Values.Persistence.volumes | indent 6 }}
{{- end }}
